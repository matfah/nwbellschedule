/*
    This class controls the drawing of a background color in the schedule table to show
    how far through the current schedule we are
    
    Some import info:
    - the content in the table view is twice the actual table view height (so half the content is always off the screen)
    - an image is generated to represent the pased (green) part and to come (white) part of the current schedule
    - the created image is then turned into a color that is set as the background color of the table view
*/

import Foundation
import UIKit

class DayProgressImageController : NSObject {

    //a decimal value between 0 and 1 that represents how far through the current day's schedule we are
    private var percent : CGFloat = 0.0;
    
    //the table view where the current schedule is displayed
    private var tableView : UITableView
    
    //controls whether we should draw progress (if the displayed day is not today, there's no reason to draw progress!)
    var showingToday : Bool = true
    
    //initializes the image controller with the table to display within
    init(tableV: UITableView) {
        
        //for some reason in swift, you intitialize instance variables BEFORE the super call...
        tableView = tableV
        super.init()
        
        //register for time passed notifications so we know to update
        NSNotificationCenter.defaultCenter().addObserver(self, selector: Selector("timePassed:"), name: "TimePassed", object: nil)
    }
    
    //when this object is deconstructed, deregister it for notifications
    deinit {
        NSNotificationCenter.defaultCenter().removeObserver(self)
    }
    
    //This method is called when a TimePassed notification is posted
    //It will contain a userInfo dictionary with...
    //  key: "percent" [String]
    //  value: decimal between 0 and 1 [Double]
    func timePassed(not : NSNotification) {
    
        //access the percentage through the day stored in the user info of the notification
        let userInfo:Dictionary<String,Double!> = not.userInfo as! Dictionary<String,Double!>
        var perc : Double = userInfo["percent"]!
        
        //if the day being show is not day, the percent is 0
        if(!showingToday) {
            perc = 0.0
        }
        
        //this is what percent through the day we are (0 to 1.0)
        percent = CGFloat(perc)
        
        //call the update method
        update()
    }
    
    //updates the table image based on what percentage through the day we are
    private func update() {
        
        /*INSERT YOUR CODE*/
        
        /*STOP INSERTING YOUR CODE*/
        
        //now change the background color of the table to match the one generated by the background image
        //(we can't set the background image, as that gets repeated for EVERY cell... which is annoying)
        tableView.backgroundColor =  UIColor(patternImage: getImage())
        tableView.setNeedsDisplay()
    }

    //function that creates an image that is the same size as the content area of the table,
    //filling the top percent portion with green, and the bottom (1 - percent) portion with white
    private func getImage() -> UIImage {
    
        //the bounds of the table
        var rect : CGRect = tableView.bounds
    
        //grab a graphics context that is the size of the table content
        UIGraphicsBeginImageContextWithOptions(CGSize(width: rect.size.width, height: rect.size.height*2), false, 1.0)
        
        /*INSERT YOUR CODE*/
        
        /*STOP INSERTING YOUR CODE*/
        
        //create an image of what we just drew
        var image : UIImage! = UIGraphicsGetImageFromCurrentImageContext()
        UIGraphicsEndImageContext()
        
        //and return that image
        return image
    }

}